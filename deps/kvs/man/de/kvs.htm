<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="description" content="" />
<meta name="author" content="Maxim Sokhatsky" />
<title>KVS</title>
<link rel="stylesheet" href="https://n2o.dev/blank.css" />
<link rel="shortcut icon" type="image/x-icon" href="/img/favicon.ico" />
<link rel="apple-touch-icon" sizes="180x180" href="/img/apple-touch-icon.png" />
<link rel="icon" type="image/png" sizes="32x32" href="/img/favicon-32x32.png" />
<link rel="icon" type="image/png" sizes="16x16" href="/img/favicon-16x16.png" />
<link rel="manifest" href="/img/site.webmanifest" />
</head>
<body>
<nav>
  <a href="https://n2o.dev/">DEV</a>
  <a href="https://kvs.n2o.space/">KVS</a>
  <a href="#" style="background:#ededed;">KVS</a>
  <div class="dropdown">
    <a onclick="drop()" class="dropbtn">DE</a>
    <div id="dropdown" class="dropdown-content">
      <a href="https://kvs.n2o.space/man/kvs.htm">EN</a>
      <a href="kvs.htm">DE</a>
      <a href="../ua/kvs.htm">UA</a>
    </div>
  </div>
</nav>
<header>
  <a href="../index.html"><img src="https://n2o.space/img/Synrc Neo.svg" /></a>
  <h1>KVS</h1>
</header>
<main>
<article>
  <section>
    <h3>INTRO</h3>
    <p>KVS module provides user level interface for console commands.
      It has discovery, data manipulation and retrival features. Under the hood
      it handles configurable run-time backends for each supported database.</p>
    <blockquote>
    <ul>
      <li><b><a href="#dir">dir/0</a></b> — table list.</li>
      <li><b><a href="#ver">ver/0</a></b> — KVS version.</li>
      <li><b><a href="#seq">seq/2</a></b> — generate new sequence table id.</li>
      <li><b><a href="#count">count/1</a></b> — counts records in table.</li>
      <li><b><a href="#put">put/1</a></b> — put record using id as a key.</li>
      <li><b><a href="#get">get/2</a></b> — get record by key from table.</li>
      <li><b><a href="#delete">delete/1</a></b> — delete record from table.</li>
      <li><b><a href="#index">index/3</a></b> — search records by field and its value.</li>
    </ul>
    </blockquote>
    <p>You can change backend by setting application env.
      This behaves well even under the heavy load.</p>
  </section>
  <section>
    <h3>SETUP</h3>
    <p>In sys.config you should specify kvs backend and list of modules
      containing <b>metainfo/0</b> exported function.</p>
    <figure>
      <code>
  [{kvs, [{dba,store_mnesia},
          {schema,[kvs,kvs_stream]}]}].
      </code>
    </figure>
    <figure>
      <figcaption>Return actual tables</figcaption>
      <code>
  dir() -&#62; list({'table',atom()}).
      </code>
    </figure>
    <figure>
      <figcaption>Return backend version</figcaption>
      <code>
  ver() -&#62; {'version',string()}.
      </code>
    </figure>
    <figure>
      <figcaption>Display database information</figcaption>
      <code>
  dump() -&#62; ok.
      </code>
    </figure>
    <figure>
      <code>
  &#62; kvs:dump().
                NAME                   STORAGE TYPE    MEMORY (MB)   ELEMENTS

              id_seq                    disc_copies           0.00          0
              writer                    disc_copies           0.00          0
              emails                    disc_copies           0.00          0
              reader                    disc_copies           0.00          0

  Snapshot taken: {{2018,11,10},{5,2,38}}
  ok
      </code>
    </figure>
  </section>
  <section>
    <h3>SEQ</h3>
    <p>Sequence table id_seq stores the counter per thing.
      The couners are global and atomic in each supported database.
      Sequences are used to generate unique names for records per distributed table.
      If names in the table are not unique, e.g.
      then count function may return a different value than the current sequence.</p>
    <figure>
      <code>
  -record(id_seq, { thing = atom(),
                    id    = 0 :: integer() } ).
      </code>
    </figure>
    <figure>
      <figcaption>Increment and return id counter for the particular table</figcaption>
      <code>
  seq(atom(), integer()) -&#62; integer().
      </code>
    </figure>
    <figure>
      <figcaption>Return number of records in table</figcaption>
      <code>
  count(atom()) -&#62; integer().
      </code>
    </figure>
  </section>
  <section>
    <h3>BACKEND</h3>
    <p>Data operations.</p>
    <figure>
      <figcaption>Storing of data record</figcaption>
      <code>
  put(tuple()) -&#62; ok | {error,any()}.
      </code>
    </figure>
    <figure>
      <figcaption>Retrieval of data record</figcaption>
      <code>
  get(atom(),any()) -&#62; {ok,any()} | {error, not_found | duplicated }.
      </code>
    </figure>
    <figure>
      <figcaption>Deletion of data record</figcaption>
      <code>
  delete(atom(),any()) -&#62; ok | {error,any()}.
      </code>
    </figure>
    <figure>
      <figcaption></figcaption>
      <code>
  index(atom(),any(),any()) -&#62; list(tuple()).
      </code>
    </figure>
    <p>Search of data record by an indexed field and a given value.</p>
  </section>
  <section>
    <p>This module may refer to:
      <a href="kvs_fs.htm"><b>kvs_fs</b></a>,
      <a href="kvs_mnesia.htm"><b>kvs_mnesia</b></a>,
      <a href="kvs_rocks.htm"><b>kvs_rocks</b></a>,
      <a href="kvs_st.htm"><b>kvs_st</b></a>,
      <a href="kvs_stream.htm"><b>kvs_stream</b></a>.
    </p>
  </section>
</article>
</main>
<footer>2005—2019 © Synrc Research Center</footer>
<script>function drop(){document.getElementById("dropdown").classList.toggle("show");}</script>
</body>
</html>
