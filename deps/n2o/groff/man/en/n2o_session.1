.TH n2o_session 1 "n2o_session" "Synrc Research Center" "SESSION"
.SH NAME
n2o_session

.SH INTRO
.LP
The
\fIn2o_session\fR\& module provides session variables protected by authorization token.
.nf
> ets:tab2list(cookies).
[{{
.fi
<
<"05dcf467c79071008bc4">>,user},{63710034516,"maxim"}},
{{
<
<"05dcf467c79071008bc4">>,room},{63710034516,"n2o"}},
{{
<
<"05dcf467c79071008bc4">>,auth},{63710033891,[]}}]

.SH TYPES
.LP
Session token represents tuple cached in ETS.
It consists of session id, key, expiration time and value.
Session token used both for auth and for session variables.
.nf
-type expires()     :: integer().
-type session_sid() :: binary().
-type session_key() :: { session_sid() , term()        }.
-type session_val() :: { expires()     , term()        }.
-type session()     :: { session_key() , session_val() }.
.fi
.LP
Session token encoded with pickler tagged as
'Token'
tuple.
.nf
-type token() :: { 'Token', binary() }.
.fi

.SH API
authenticate([],binary()) -> token().
.LP
The protocol is following. If session is expired or session
token is invalid then new session token issued. If session token
is not expired and valid then two cases could happen:
1) if
nitro_prolongate
n2o parameter is true,
then new expiration value is updated for current session, while
session sid remains unchanged;
2) if
nitro_prolongate
is false then full session token remains unchanged.
get_value(binary(),term(),term()) -> term().
.LP
Gets session variable from session storage.
set_value(binary(),term(),term()) -> term().
.LP
Sets session variable to session storage.
storage() -> atom().
.LP
Returns current sessions backend.
n2o_session
by default.
prolongate() -> boolean().
.LP
Returns
nitro_prolongate
n2o parameter.
false
by default.

.SH BACKEND
clear(binary()) -> ok.
.LP
Clears all session variables by session sid.
update(session()) -> ok.
.LP
Updates session.
delete(session_key()) -> ok.
.LP
Removes session by key.
lookup(session_key()) -> ok.
.LP
Lookups session by key.
invalidate_sessions() -> ok.
.LP
Removes all expired variables across all sessions.

.SH ALSO
.LP
\fB\fIn2o_nitro(1)\fR\&\fR\&, \fB\fIn2o(1)\fR\&\fR\&